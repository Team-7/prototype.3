package com.dhliwayok.hopeworldwide;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class MyConnect {
	
	private HopeDbAdapter mydb;  
	
	
	public MyConnect(HopeDbAdapter mydb) {

		this.mydb = mydb;
	}


	public void parseJSON()  
    {  
          
        String result = "";  
        //String x = "";  
        InputStream is=null;  
        //http post  
        try{   
        	
                //ArrayList<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();  
                ArrayList<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();  

                HttpClient httpclient = new DefaultHttpClient();  
                HttpPost httppost = new HttpPost("http://10.0.2.2/sync/get.php");  
                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));  
                HttpResponse response = httpclient.execute(httppost);  
                HttpEntity entity = response.getEntity();  
                is = entity.getContent();  
        }catch(Exception e){  
                Log.e("log_tag", "Error in http connection "+e.toString());  
        }  
        //convert response to string  
        try{  
                  
                BufferedReader reader = new BufferedReader(new InputStreamReader(is,"iso-8859-1"),8);  
                StringBuilder sb = new StringBuilder();  
                String line = null;  
                while ((line = reader.readLine()) != null) {  
                        sb.append(line + "\n");  
                }  
                is.close();  
           
                result=sb.toString();  
                Log.e("log_tag", result);
                  
        }catch(Exception e){  
                Log.e("log_tag", "Error converting result "+e.toString());  
        }  
        // </namevaluepair> </namevaluepair> 
         
         try{
        	 JSONArray jArray = new JSONArray(result);
        	  
             for(int i=0;i<jArray.length();i++){  
                 JSONObject json_data = jArray.getJSONObject(i);  
                 //String querylog= "insert or replace into table(a,b,c) values('"+json_data.getString("a")+"','"+json_data.getString("b")+"','"+json_data.getString("c")+"')";  
                 //Log.e("log_tag", json_data.getString("child_name"));
                 
                 if (mydb.insertChild(json_data.getInt("child_id"), json_data.getString("child_name"), json_data.getString("OD"), json_data.getString("Date_Of_Birth"),json_data.getString("Gender"))> 0) 
                	 Message.message(this, "inserted successfully");
             }
        	}
        catch (JSONException e){   
        Log.e("log_tag", "Error parsing data "+e.toString());  
} 
	
    }
	

}
